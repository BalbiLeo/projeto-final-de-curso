/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pfc;

import dados.Bean.Funcionario;
import java.util.Locale;
import javax.swing.JOptionPane;
import pfcDAO.funcionarioDAO;


/**
 *
 * @author Balbicosta
 */
public class IFrameFunc extends javax.swing.JInternalFrame {
    
// Instanciamento dos bean e Data Access Object para uso da tela de Anamnese.
    Funcionario func = new Funcionario();
    funcionarioDAO fDAO = new funcionarioDAO();
    
    /**
     * Creates new form IFrameFunc
     */
    public IFrameFunc() {
        initComponents();
        Locale.setDefault(new Locale("pt", "BR"));
    }
    
    public void inibirBot(String Dept){
        if (Dept.equalsIgnoreCase("Enfermeiro") || Dept.equalsIgnoreCase("Administrador")){
            this.alterar.setEnabled(true);
            this.excluir.setEnabled(true);
        }else{
            this.alterar.setEnabled(false);
            this.excluir.setEnabled(false);
        }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nome = new javax.swing.JTextField();
        endereco = new javax.swing.JTextField();
        sexo = new javax.swing.JTextField();
        id = new javax.swing.JTextField();
        idade = new javax.swing.JTextField();
        funcao = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        dept = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        infoAd = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        salvar = new javax.swing.JButton();
        excluir = new javax.swing.JButton();
        alterar = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        buscar = new javax.swing.JButton();
        busca = new javax.swing.JTextField();
        limpar = new javax.swing.JButton();
        fone = new javax.swing.JFormattedTextField();
        cpf = new javax.swing.JFormattedTextField();
        ultEx = new javax.swing.JFormattedTextField();
        proxEx = new javax.swing.JFormattedTextField();
        sair = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Dados Pessoais");

        nome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomeActionPerformed(evt);
            }
        });

        jLabel2.setText("Função");

        jLabel3.setText("Sexo");

        jLabel4.setText("Endereço");

        jLabel5.setText("Telefone");

        jLabel6.setText("Idade");

        jLabel7.setText("CPF");

        jLabel8.setText("Email");

        jLabel9.setText("Identificação (ID)");

        jLabel10.setText("Nome");

        jLabel1.setText("Departamento");

        jLabel11.setText("Último Exame");

        jLabel12.setText("Próximo Exame");

        infoAd.setColumns(20);
        infoAd.setRows(5);
        jScrollPane1.setViewportView(infoAd);

        jLabel13.setText("Informações Adicionais");

        salvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/disk.png"))); // NOI18N
        salvar.setText("Salvar");
        salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarActionPerformed(evt);
            }
        });

        excluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/application_form_delete.png"))); // NOI18N
        excluir.setText("Excluir");
        excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirActionPerformed(evt);
            }
        });

        alterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/application_form_edit.png"))); // NOI18N
        alterar.setText("Alterar");
        alterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterarActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Dados do Funcionário");

        buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/magnifier.png"))); // NOI18N
        buscar.setText("Buscar");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        busca.setToolTipText("Favor inserir a matrícula"); // NOI18N

        limpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/bin_empty.png"))); // NOI18N
        limpar.setText("Limpar");
        limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparActionPerformed(evt);
            }
        });

        try {
            fone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)#####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            cpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            ultEx.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        try {
            proxEx.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        sair.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        sair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/cancel.png"))); // NOI18N
        sair.setText("Sair");
        sair.setPreferredSize(new java.awt.Dimension(85, 26));
        sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(231, 231, 231)
                        .addComponent(jLabel12)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(fone, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(sexo, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE))
                                    .addComponent(nome))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(idade, javax.swing.GroupLayout.DEFAULT_SIZE, 149, Short.MAX_VALUE)
                                    .addComponent(cpf)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(endereco)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(email, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                                                    .addComponent(funcao, javax.swing.GroupLayout.Alignment.LEADING))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel9)
                                                    .addComponent(jLabel1)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(22, 22, 22)
                                                .addComponent(ultEx, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(id)
                                            .addComponent(dept)
                                            .addComponent(proxEx)))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(buscar)
                                .addGap(18, 18, 18)
                                .addComponent(busca))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(salvar)
                                .addGap(18, 18, 18)
                                .addComponent(alterar)
                                .addGap(18, 18, 18)
                                .addComponent(excluir)
                                .addGap(18, 18, 18)
                                .addComponent(limpar)
                                .addGap(18, 18, 18)
                                .addComponent(sair, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)))
                        .addGap(30, 30, 30))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(idade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3)
                    .addComponent(sexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(fone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(endereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(funcao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(dept, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(ultEx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(proxEx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buscar)
                    .addComponent(busca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salvar)
                    .addComponent(excluir)
                    .addComponent(alterar)
                    .addComponent(limpar)
                    .addComponent(sair, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomeActionPerformed

    private void salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarActionPerformed
        //Salva os dados pessoais do funcionário cadastrado:
        String ID = id.getText();
        
        //Verifica se o formulário está em branco
        if ( ID.equalsIgnoreCase("") ){
            JOptionPane.showMessageDialog(null, "Favor preencher todos os campos do formulário.");
        }else{
            int Id = Integer.valueOf(ID);
            func.setId(Id);
            String Nome = nome.getText();
            func.setNome(Nome);
            String Idade = idade.getText();
            int Idad = Integer.valueOf(Idade);
            func.setIdade(Idad);
            String Fone = fone.getText();
            func.setFone(Fone);
            String Sexo = sexo.getText();
            func.setSexo(Sexo);
            String CPF = cpf.getText();
            func.setCpf(CPF);
            String Endereco = endereco.getText();
            func.setEndereco(Endereco);
            String Funcao = funcao.getText();
            func.setFuncao(Funcao);
            String Email = email.getText();
            func.setEmail(Email);
            String Dept = dept.getText();
            func.setDept(Dept);
            String DataUlt = ultEx.getText();
            func.setDataUlt(DataUlt);
            String DataProx = proxEx.getText();
            func.setDataProx(DataProx);
            String InfoAd = infoAd.getText();
            func.setInfoAd(InfoAd);
        
        // Chamada do método para salvar os dados na classe de Data Access Object funcionarioDAO.
        fDAO.saveData(func);
        }
        // Limpa os campos da tela de dados pessoais do funcionário após salvar
        id.setText("");
        nome.setText("");
        idade.setText("");
        fone.setText("");
        sexo.setText("");
        cpf.setText("");
        endereco.setText("");
        funcao.setText("");
        email.setText("");
        dept.setText("");
        ultEx.setText("");
        proxEx.setText("");
        infoAd.setText("");
    }//GEN-LAST:event_salvarActionPerformed

    private void alterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterarActionPerformed
        // Ação do botão alterar na tela de cadastro de Funcionários
        String ID = id.getText();
        
        // Verifica se o formulário está em branco
        if (ID.equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(null, "Para alterar os dados é necessário BUSCAR por um funcionário.");
        }else{
            int Id = Integer.valueOf(ID);
            func.setId(Id);
            String Nome = nome.getText();
            func.setNome(Nome);
            String Idad = idade.getText();
            int Idade = Integer.valueOf(Idad);
            func.setIdade(Idade);
            String Fone = fone.getText();
            func.setFone(Fone);
            String Sexo = sexo.getText();
            func.setSexo(Sexo);
            String CPF = cpf.getText();
            func.setCpf(CPF);
            String Endereco = endereco.getText();
            func.setEndereco(Endereco);
            String Funcao = funcao.getText();
            func.setFuncao(Funcao);
            String Email = email.getText();
            func.setEmail(Email);
            String Dept = dept.getText();
            func.setDept(Dept);
            String DataUlt = ultEx.getText();
            func.setDataUlt(DataUlt);
            String DataProx = proxEx.getText();
            func.setDataProx(DataProx);
            String InfoAd = infoAd.getText();
            func.setInfoAd(InfoAd);
        
            // Chamada do método para alterar os dados na classe de Data Access Object funcionarioDAO.
            fDAO.changeData(func);
            JOptionPane.showMessageDialog(null, "Dados atualizados com sucesso.");
        }
        // Limpa os campos da tela de dados pessoais do funcionário após alteração.
        id.setText("");
        nome.setText("");
        idade.setText("");
        fone.setText("");
        sexo.setText("");
        cpf.setText("");
        endereco.setText("");
        funcao.setText("");
        email.setText("");
        dept.setText("");
        ultEx.setText("");
        proxEx.setText("");
        infoAd.setText("");
    }//GEN-LAST:event_alterarActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        // Ação do botão BUSCAR na tela de cadastro de FUNCIONÁRIOS:
        
        String Busca = busca.getText();
        fDAO.listData(Busca);
        int ID = fDAO.listData(Busca).getId();
        String Id = String.valueOf(ID);
        
        // Verifica se o campo de BUSCA foi prencido na tela de ANAMNESE.
        if (Busca.equalsIgnoreCase("") || ID==0){
            JOptionPane.showMessageDialog(null, "Matrícula não informada ou não cadastrada.");
            
            // Mantém os campos da tela de cadastro de FUNCIONÁRIOS em branco.
            id.setText("");
            nome.setText("");
            idade.setText("");
            fone.setText("");
            sexo.setText("");
            cpf.setText("");
            endereco.setText("");
            funcao.setText("");
            email.setText("");
            dept.setText("");
            ultEx.setText("");
            proxEx.setText("");
            infoAd.setText("");
            busca.setText("");
        }else{
            
            // Carrega os dados pessoais do FUNCIONÁRIO na tela de cadastro de funcionário.
            id.setText(Id);
            String Nome = String.valueOf(fDAO.listData(Busca).getNome());
            nome.setText(Nome);
            int ida = fDAO.listData(Busca).getIdade();
            String Idade = String.valueOf(ida);
            idade.setText(Idade);
            String Fone = String.valueOf(fDAO.listData(Busca).getFone());
            fone.setText(Fone);
            String Sexo = String.valueOf(fDAO.listData(Busca).getSexo());
            sexo.setText(Sexo);
            String CPF = String.valueOf(fDAO.listData(Busca).getCpf());
            cpf.setText(CPF);
            String Endereco = String.valueOf(fDAO.listData(Busca).getEndereco());
            endereco.setText(Endereco);
            String Funcao = String.valueOf(fDAO.listData(Busca).getFuncao());
            funcao.setText(Funcao);
            String Email = String.valueOf(fDAO.listData(Busca).getEmail());
            email.setText(Email);
            String Dept = String.valueOf(fDAO.listData(Busca).getDept());
            dept.setText(Dept);
            String Ultex = String.valueOf(fDAO.listData(Busca).getDataUlt());
            ultEx.setText(Ultex);
            String Proxex = String.valueOf(fDAO.listData(Busca).getDataUlt());
            proxEx.setText(Proxex);
            String Infoad = String.valueOf(fDAO.listData(Busca).getInfoAd());
            infoAd.setText(Infoad);
        }
    }//GEN-LAST:event_buscarActionPerformed

    private void excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirActionPerformed
        // Ação do botão EXCLUIR na tela de cadastro de FUNCIONÁRIO.
        String ID = id.getText();
        
        // Verifica se o formulário está em branco
        if (ID.equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(null, "Para excluir os dados é necessário BUSCAR por um funcionário.");
        }else{
            int Id = Integer.valueOf(ID);
            func.setId(Id);
        
            // Chamada do método para APAGAR os dados pessoais do FUNCIONÁRIO na classe funcionarioDAO
            fDAO.eraseData(func);
            JOptionPane.showMessageDialog(null, "Funcionário excluído com sucesso.");
        }
        // Mantém os campos de dados pessoais em branco após ação de apagar.
        id.setText("");
        nome.setText("");
        idade.setText("");
        fone.setText("");
        sexo.setText("");
        cpf.setText("");
        endereco.setText("");
        funcao.setText("");
        email.setText("");
        dept.setText("");
        ultEx.setText("");
        proxEx.setText("");
        infoAd.setText("");
        busca.setText("");
    }//GEN-LAST:event_excluirActionPerformed

    private void limparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparActionPerformed
        // Ação do botão LIMPA na tela de cadastro de FUNCIONÁRIOS.
        
        // Limpa todos os campos da tela de cadastro de FUNCIONÁRIOS
        id.setText("");
        nome.setText("");
        idade.setText("");
        fone.setText("");
        sexo.setText("");
        cpf.setText("");
        endereco.setText("");
        funcao.setText("");
        email.setText("");
        dept.setText("");
        ultEx.setText("");
        proxEx.setText("");
        infoAd.setText("");
        busca.setText("");
    }//GEN-LAST:event_limparActionPerformed

    private void sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairActionPerformed
        // Ação do botão SAI na tela de cadastro de FUNCIONÁRIOS.
        this.dispose();
    }//GEN-LAST:event_sairActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton alterar;
    private javax.swing.JTextField busca;
    private javax.swing.JButton buscar;
    private javax.swing.JFormattedTextField cpf;
    private javax.swing.JTextField dept;
    private javax.swing.JTextField email;
    private javax.swing.JTextField endereco;
    private javax.swing.JButton excluir;
    private javax.swing.JFormattedTextField fone;
    private javax.swing.JTextField funcao;
    private javax.swing.JTextField id;
    private javax.swing.JTextField idade;
    private javax.swing.JTextArea infoAd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton limpar;
    private javax.swing.JTextField nome;
    private javax.swing.JFormattedTextField proxEx;
    private javax.swing.JButton sair;
    private javax.swing.JButton salvar;
    private javax.swing.JTextField sexo;
    private javax.swing.JFormattedTextField ultEx;
    // End of variables declaration//GEN-END:variables
}
