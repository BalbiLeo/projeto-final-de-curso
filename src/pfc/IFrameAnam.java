/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pfc;

import dados.Bean.Anamnese;
import dados.Bean.DadoClinico;
import dados.Bean.DadoRisco;
import javax.swing.JOptionPane;
import pfcDAO.anamneseDAO;
import pfcDAO.dadoClinicoDAO;
import pfcDAO.dadoRiscoDAO;
import pfcDAO.funcionarioDAO;

/**
 *
 * @author Balbicosta
 */
public class IFrameAnam extends javax.swing.JInternalFrame {

    // Instanciamento dos bean e Data Access Object para uso da tela de Anamnese.
    funcionarioDAO fDAO = new funcionarioDAO();
    anamneseDAO aDAO = new anamneseDAO();
    Anamnese anam = new Anamnese();
    dadoRiscoDAO riscoDAO = new dadoRiscoDAO();
    DadoRisco dadoris = new DadoRisco();
    dadoClinicoDAO cliDAO = new dadoClinicoDAO();
    DadoClinico dadocli = new DadoClinico();
    CalcularIMC cIMC = new CalcularIMC();

    /**
     * Creates new form IFrameAnam
     */
    public IFrameAnam() {
        initComponents();
    }
    
    public void inibirBot(String dept){
        if (!dept.equalsIgnoreCase("Gerência") || !dept.equalsIgnoreCase("Administrador")){
            this.alterar.setEnabled(false);
            this.excluir.setEnabled(false);
        }else{
            this.alterar.setEnabled(true);
            this.excluir.setEnabled(true);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        admis = new javax.swing.JCheckBox();
        perid = new javax.swing.JCheckBox();
        demis = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        fumo = new javax.swing.JCheckBox();
        isquem = new javax.swing.JCheckBox();
        convul = new javax.swing.JCheckBox();
        avc = new javax.swing.JCheckBox();
        arritm = new javax.swing.JCheckBox();
        alcool = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        vasc = new javax.swing.JCheckBox();
        hiper = new javax.swing.JCheckBox();
        lombal = new javax.swing.JCheckBox();
        epilep = new javax.swing.JCheckBox();
        alerg = new javax.swing.JCheckBox();
        colest = new javax.swing.JCheckBox();
        diab = new javax.swing.JCheckBox();
        resp = new javax.swing.JCheckBox();
        reumat = new javax.swing.JCheckBox();
        medic = new javax.swing.JCheckBox();
        salvar = new javax.swing.JButton();
        sair = new javax.swing.JButton();
        limpar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        apt = new javax.swing.JCheckBox();
        inapt = new javax.swing.JCheckBox();
        infar = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        dataaval = new javax.swing.JFormattedTextField();
        peso = new javax.swing.JTextField();
        altura = new javax.swing.JTextField();
        imc = new javax.swing.JLabel();
        obesid = new javax.swing.JLabel();
        alterar = new javax.swing.JButton();
        excluir = new javax.swing.JButton();
        buscar = new javax.swing.JButton();
        busca = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setTitle("Anamnese");
        setAutoscrolls(true);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setPreferredSize(new java.awt.Dimension(710, 650));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Questionário de Saúde Ocupacional");

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("TIPO DE EXAME");
        jLabel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        admis.setText("Admissional");

        perid.setText("Periódico");

        demis.setText("Demissional");
        demis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                demisActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("ANTECEDENTES FAMILIARES");
        jLabel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        fumo.setText("Fumo");

        isquem.setText("Isquemia");

        convul.setText("Convulsão");

        avc.setText("Derrame / AVC");

        arritm.setText("Arritimia");

        alcool.setText("Alcool");

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("ANTECEDENTES PESSOAIS");
        jLabel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        vasc.setText("Problemas Vasculares");
        vasc.setMaximumSize(new java.awt.Dimension(142, 23));
        vasc.setPreferredSize(new java.awt.Dimension(142, 23));

        hiper.setText("Hipertensão");
        hiper.setMaximumSize(new java.awt.Dimension(142, 23));
        hiper.setPreferredSize(new java.awt.Dimension(142, 23));

        lombal.setText("Lombalgia");
        lombal.setMaximumSize(new java.awt.Dimension(142, 23));
        lombal.setPreferredSize(new java.awt.Dimension(142, 23));

        epilep.setText("Epilepsia");
        epilep.setMaximumSize(new java.awt.Dimension(142, 23));
        epilep.setPreferredSize(new java.awt.Dimension(142, 23));

        alerg.setText("Alergias");
        alerg.setPreferredSize(new java.awt.Dimension(126, 23));

        colest.setText("Colesterol");
        colest.setPreferredSize(new java.awt.Dimension(126, 23));

        diab.setText("Diabetes");
        diab.setPreferredSize(new java.awt.Dimension(126, 23));

        resp.setText("Problemas Respiratórios");

        reumat.setText("Reumatismo");
        reumat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reumatActionPerformed(evt);
            }
        });

        medic.setText("Medicamentos");
        medic.setPreferredSize(new java.awt.Dimension(126, 23));

        salvar.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        salvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/disk.png"))); // NOI18N
        salvar.setText("Salvar");
        salvar.setPreferredSize(new java.awt.Dimension(87, 26));
        salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarActionPerformed(evt);
            }
        });

        sair.setFont(new java.awt.Font("SansSerif", 0, 11)); // NOI18N
        sair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/cancel.png"))); // NOI18N
        sair.setText("Sair");
        sair.setPreferredSize(new java.awt.Dimension(87, 26));
        sair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sairActionPerformed(evt);
            }
        });

        limpar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/bin.png"))); // NOI18N
        limpar.setText("Limpar");
        limpar.setPreferredSize(new java.awt.Dimension(87, 26));
        limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparActionPerformed(evt);
            }
        });

        jLabel5.setText("ID:");

        apt.setText("Apto");

        inapt.setText("Inapto");

        infar.setText("Infarto");

        jLabel6.setText("Data:");

        jLabel7.setText("Peso:");

        jLabel8.setText("Altura:");

        jLabel9.setText("IMC:");

        jLabel10.setText("Obesidade:");

        try {
            dataaval.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        imc.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        obesid.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        alterar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/application_form_edit.png"))); // NOI18N
        alterar.setText("Alterar");
        alterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alterarActionPerformed(evt);
            }
        });

        excluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/application_form_delete.png"))); // NOI18N
        excluir.setText("Excluir");
        excluir.setPreferredSize(new java.awt.Dimension(87, 26));
        excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirActionPerformed(evt);
            }
        });

        buscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/magnifier.png"))); // NOI18N
        buscar.setText("Buscar");
        buscar.setPreferredSize(new java.awt.Dimension(87, 25));
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        busca.setToolTipText("Favor inserir a matrícula.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(fumo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(avc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(70, 70, 70)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(arritm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(alcool, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(70, 70, 70)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(isquem)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(convul, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(72, 72, 72)
                                .addComponent(infar)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(salvar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(alterar, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(excluir, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(limpar, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(sair, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(alerg, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(medic, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(hiper, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(diab, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(reumat, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(epilep, javax.swing.GroupLayout.DEFAULT_SIZE, 191, Short.MAX_VALUE)
                                        .addComponent(lombal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(resp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(vasc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(colest, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(17, 17, 17)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel10)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(obesid, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(65, 65, 65)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(dataaval, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(peso, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                                                    .addComponent(altura)
                                                    .addComponent(imc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(busca)))
                        .addGap(0, 51, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(admis, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(demis, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(perid, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(apt, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(inapt)
                .addGap(55, 55, 55))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(admis)
                    .addComponent(perid)
                    .addComponent(demis)
                    .addComponent(jLabel5)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(apt)
                    .addComponent(inapt))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fumo)
                    .addComponent(alcool)
                    .addComponent(convul)
                    .addComponent(infar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(avc)
                    .addComponent(arritm)
                    .addComponent(isquem))
                .addGap(15, 15, 15)
                .addComponent(jLabel4)
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(alerg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(epilep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(dataaval, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(medic, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lombal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(peso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hiper, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resp)
                    .addComponent(jLabel8)
                    .addComponent(altura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(vasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(diab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(imc, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(reumat)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(colest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(obesid, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(busca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salvar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(alterar)
                    .addComponent(excluir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(limpar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sair, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35))
        );

        setBounds(0, 0, 736, 582);
    }// </editor-fold>//GEN-END:initComponents

    private void demisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_demisActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_demisActionPerformed

    private void salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarActionPerformed
        // Ação do botão SALVAR na tela de cadastro da ANAMNESE.
        String Id = id.getText();

        //Verifica se o formulário está em branco
        if (Id.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(null, "Favor preencher os campos do formulário.");
        } else {
            int ID = Integer.valueOf(Id);

            // Confirma se o funcionário já está cadastrado no sistema.
            if (ID == fDAO.listData(Id).getId()) {

                // Registra no banco de dados o tipo de exame.
                anam.setId(ID);
                boolean Admis = admis.isSelected();
                anam.setAdmis(Admis);
                boolean Demis = demis.isSelected();
                anam.setDemis(Demis);
                boolean Perid = perid.isSelected();
                anam.setPerid(Perid);
                boolean Apt = apt.isSelected();
                anam.setApto(Apt);
                boolean Inapt = inapt.isSelected();
                anam.setInapto(Inapt);

                // Chamada do método para salvar os dados na classe de Data Access Object anamneseDAO.
                aDAO.saveData(anam);

                // Registra no banco os dados de risco (antecedentes familiares).
                dadoris.setId(ID);
                boolean Fumo = fumo.isSelected();
                dadoris.setFumo(Fumo);
                boolean Alcool = alcool.isSelected();
                dadoris.setAlcool(Alcool);
                boolean Convul = convul.isSelected();
                dadoris.setConvul(Convul);
                boolean Avc = avc.isSelected();
                dadoris.setDerrame(Avc);
                boolean Infart = infar.isSelected();
                dadoris.setInfarto(Infart);
                boolean Isquem = isquem.isSelected();
                dadoris.setIsquem(Isquem);
                boolean Arritm = arritm.isSelected();
                dadoris.setArritm(Arritm);

                // Chamada do método para salvar os dados na classe de Data Access Object dadoRiscoDAO.
                riscoDAO.saveData(dadoris);

                // Registra no banco os dados de risco (antecedentes pessoais).
                dadocli.setId(ID);
                String DataAval = dataaval.getText();
                dadocli.setDataAval(DataAval);
                boolean Alerg = alerg.isSelected();
                dadocli.setAlerg(Alerg);
                boolean Medic = medic.isSelected();
                dadocli.setMedicam(Medic);
                boolean Hiper = hiper.isSelected();
                dadocli.setHiperten(Hiper);
                boolean Diab = diab.isSelected();
                dadocli.setDiabete(Diab);
                boolean Reumat = reumat.isSelected();
                dadocli.setReumat(Reumat);
                boolean Epileps = epilep.isSelected();
                dadocli.setEpileps(Epileps);
                boolean Lombal = lombal.isSelected();
                dadocli.setLombal(Lombal);
                boolean Resp = resp.isSelected();
                dadocli.setProbResp(Resp);
                boolean Vasc = vasc.isSelected();
                dadocli.setProbVasc(Vasc);
                boolean Colest = colest.isSelected();
                dadocli.setColest(Colest);
                String Peso = peso.getText();
                Double PESO = Double.valueOf(Peso);
                dadocli.setPeso(PESO);
                String Altura = altura.getText();
                double ALTURA = Double.valueOf(Altura);
                dadocli.setAltura(ALTURA);

                //Chamada do método de cálculo de IMC e tratamento de número de casas decimais na classe CalcularIMC 
                double IMC = cIMC.IMC(PESO, ALTURA);
                String Imc = cIMC.formato(IMC);
                imc.setText(Imc);
                dadocli.setImc(IMC);
                cIMC.obesid(IMC);
                String Obesid = cIMC.obesid(IMC);
                obesid.setText(Obesid);
                dadocli.setObesid(Obesid);

                // Chamada do método para salvar os dados na classe de Data Access Object dadoClinicoDAO.
                cliDAO.saveData(dadocli);
                JOptionPane.showMessageDialog(null, "Anamnese finalizada com sucesso.");
            } else {
                JOptionPane.showMessageDialog(null, "Funcionário não cadastrado.");
            }
        }
    }//GEN-LAST:event_salvarActionPerformed

    private void reumatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reumatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_reumatActionPerformed

    private void sairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sairActionPerformed
        // Ação do botão SAIR na tela de ANAMNESE:
        this.dispose();
    }//GEN-LAST:event_sairActionPerformed

    private void limparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparActionPerformed
        // Ação do botão LIMPAR na tela de ANAMNESE:

        //Limpa os dados do tipo de exame.
        id.setText("");
        admis.setSelected(false);
        demis.setSelected(false);
        perid.setSelected(false);
        apt.setSelected(false);
        inapt.setSelected(false);

        //Limpa os dados de risco (antecedentes familiares).
        fumo.setSelected(false);
        alcool.setSelected(false);
        convul.setSelected(false);
        avc.setSelected(false);
        infar.setSelected(false);
        isquem.setSelected(false);
        arritm.setSelected(false);

        //Limpa os dados clínicos (antecedentes pessoais).
        dataaval.setText("");
        alerg.setSelected(false);
        medic.setSelected(false);
        hiper.setSelected(false);
        diab.setSelected(false);
        reumat.setSelected(false);
        obesid.setText("");
        epilep.setSelected(false);
        lombal.setSelected(false);
        resp.setSelected(false);
        vasc.setSelected(false);
        colest.setSelected(false);
        peso.setText("");
        altura.setText("");
        imc.setText("");
    }//GEN-LAST:event_limparActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        // Ação do botão BUSCAR na tela de ANAMNESE:
        String Busca = busca.getText();
        int ID = aDAO.listData(Busca).getId();
        String Id = String.valueOf(ID);

        // Verifica se o campo de BUSCA foi prencido na tela de ANAMNESE.
        if (Busca.equalsIgnoreCase("") || ID == 0) {
            JOptionPane.showMessageDialog(null, "Matrícula não informada ou não cadastrada.");

            // Mantém os campos de tipo de exame em branco.
            id.setText("");
            admis.setSelected(false);
            demis.setSelected(false);
            perid.setSelected(false);
            apt.setSelected(false);
            inapt.setSelected(false);

            // Mantém os campos de dados de risco (antecedentes familiares) em branco.
            fumo.setSelected(false);
            alcool.setSelected(false);
            convul.setSelected(false);
            avc.setSelected(false);
            infar.setSelected(false);
            isquem.setSelected(false);
            arritm.setSelected(false);

            // Mantém os campos de dados clínicos (antecedentes pessoais) em branco.
            dataaval.setText("");
            alerg.setSelected(false);
            medic.setSelected(false);
            hiper.setSelected(false);
            diab.setSelected(false);
            reumat.setSelected(false);
            obesid.setText("");
            epilep.setSelected(false);
            lombal.setSelected(false);
            resp.setSelected(false);
            vasc.setSelected(false);
            colest.setSelected(false);
            peso.setText("");
            altura.setText("");
            imc.setText("");
        } else {

            // Carrega na tela de ANAMNESE os dados do tipo de exame. 
            id.setText(Id);
            boolean Admis = aDAO.listData(Busca).isAdmis();
            admis.setSelected(Admis);
            boolean Demis = aDAO.listData(Busca).isDemis();
            demis.setSelected(Demis);
            boolean Perid = aDAO.listData(Busca).isPerid();
            perid.setSelected(Perid);
            boolean Apt = aDAO.listData(Busca).isApto();
            apt.setSelected(Apt);
            boolean Inapt = aDAO.listData(Busca).isInapto();
            inapt.setSelected(Inapt);

            // Carrega na tela de ANAMNESE os dados de risco (antecedentes familiares)
            boolean Fumo = riscoDAO.listData(Busca).getFumo();
            fumo.setSelected(Fumo);
            boolean Alcool = riscoDAO.listData(Busca).getAlcool();
            alcool.setSelected(Alcool);
            boolean Convul = riscoDAO.listData(Busca).getConvul();
            convul.setSelected(Convul);
            boolean Avc = riscoDAO.listData(Busca).getDerrame();
            avc.setSelected(Avc);
            boolean Infart = riscoDAO.listData(Busca).getInfarto();
            infar.setSelected(Infart);
            boolean Isquem = riscoDAO.listData(Busca).getIsquem();
            isquem.setSelected(Isquem);
            boolean Arritm = riscoDAO.listData(Busca).getArritm();
            arritm.setSelected(Arritm);

            // Carrega na tela de ANAMNESE os dados clínicos (antecedentes pessoais)
            String DataAval = cliDAO.listData(Busca).getDataAval();
            dataaval.setText(DataAval);
            boolean Alerg = cliDAO.listData(Busca).getAlerg();
            alerg.setSelected(Alerg);
            boolean Medic = cliDAO.listData(Busca).getMedicam();
            medic.setSelected(Medic);
            boolean Hiper = cliDAO.listData(Busca).getHiperten();
            hiper.setSelected(Hiper);
            boolean Diab = cliDAO.listData(Busca).getDiabete();
            diab.setSelected(Diab);
            boolean Reumat = cliDAO.listData(Busca).getReumat();
            reumat.setSelected(Reumat);
            boolean Epileps = cliDAO.listData(Busca).getEpileps();
            epilep.setSelected(Epileps);
            boolean Lombal = cliDAO.listData(Busca).getLombal();
            lombal.setSelected(Lombal);
            boolean Resp = cliDAO.listData(Busca).getProbResp();
            resp.setSelected(Resp);
            boolean Vasc = cliDAO.listData(Busca).getProbVasc();
            vasc.setSelected(Vasc);
            boolean Colest = cliDAO.listData(Busca).getColest();
            colest.setSelected(Colest);
            Double PESO = cliDAO.listData(Busca).getPeso();
            String Peso = String.valueOf(PESO);
            peso.setText(Peso);
            double ALTURA = cliDAO.listData(Busca).getAltura();
            String Altura = String.valueOf(ALTURA);
            altura.setText(Altura);
            double IMC = cliDAO.listData(Busca).getImc();
            String Imc = cIMC.formato(IMC);
            imc.setText(Imc);
            String Obesid = cliDAO.listData(Busca).getObesid();
            obesid.setText(Obesid);
            busca.setText("");
        }
    }//GEN-LAST:event_buscarActionPerformed

    private void alterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alterarActionPerformed
        // Açaõ do botão ALTERAR na tela de ANAMNESE
        String Id = id.getText();

        //Verifica se o formulário está em brnaco
        if (Id.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(null, "Para alterar os dados é necessário BUSCAR por uma anamnese.");
        } else {

            // Confirma se o funcionário já está cadastrado no sistema.
            int ID = Integer.valueOf(Id);
            if (ID == fDAO.listData(Id).getId()) {

                //Altera no banco de dados os dados alterados no tipo de exame.
                anam.setId(ID);
                boolean Admis = admis.isSelected();
                anam.setAdmis(Admis);
                boolean Demis = demis.isSelected();
                anam.setDemis(Demis);
                boolean Perid = perid.isSelected();
                anam.setPerid(Perid);
                boolean Apt = apt.isSelected();
                anam.setApto(Apt);
                boolean Inapt = inapt.isSelected();
                anam.setInapto(Inapt);

                // Chamada do método para alterar os dados na classe de Data Access Object anamneseDAO.
                aDAO.changeData(anam);

                //Altera no banco de dados os dados de risco (antecedentes familiares) alterados.
                dadoris.setId(ID);
                boolean Fumo = fumo.isSelected();
                dadoris.setFumo(Fumo);
                boolean Alcool = alcool.isSelected();
                dadoris.setAlcool(Alcool);
                boolean Convul = convul.isSelected();
                dadoris.setConvul(Convul);
                boolean Avc = avc.isSelected();
                dadoris.setDerrame(Avc);
                boolean Infart = infar.isSelected();
                dadoris.setInfarto(Infart);
                boolean Isquem = isquem.isSelected();
                dadoris.setIsquem(Isquem);
                boolean Arritm = arritm.isSelected();
                dadoris.setArritm(Arritm);

                // Chamada do método para alterar os dados na classe de Data Access Object dadoRiscoDAO.
                riscoDAO.changeData(dadoris);

                //Altera no banco de dados os dados clínicos (antecedentes pessoais) alterados.
                dadocli.setId(ID);
                String DataAval = dataaval.getText();
                dadocli.setDataAval(DataAval);
                boolean Alerg = alerg.isSelected();
                dadocli.setAlerg(Alerg);
                boolean Medic = medic.isSelected();
                dadocli.setMedicam(Medic);
                boolean Hiper = hiper.isSelected();
                dadocli.setHiperten(Hiper);
                boolean Diab = diab.isSelected();
                dadocli.setDiabete(Diab);
                boolean Reumat = reumat.isSelected();
                dadocli.setReumat(Reumat);
                boolean Epileps = epilep.isSelected();
                dadocli.setEpileps(Epileps);
                boolean Lombal = lombal.isSelected();
                dadocli.setLombal(Lombal);
                boolean Resp = resp.isSelected();
                dadocli.setProbResp(Resp);
                boolean Vasc = vasc.isSelected();
                dadocli.setProbVasc(Vasc);
                boolean Colest = colest.isSelected();
                dadocli.setColest(Colest);
                String Peso = peso.getText();
                Double PESO = Double.valueOf(Peso);
                dadocli.setPeso(PESO);
                String Altura = altura.getText();
                double ALTURA = Double.valueOf(Altura);
                dadocli.setAltura(ALTURA);

                //Chamada do método de cálculo de IMC e tratamento de casas decimais na classe CalcularIMC
                // caso tenha ocorrido alteração de PESO.
                double IMC = cIMC.IMC(PESO, ALTURA);
                String Imc = cIMC.formato(IMC);
                imc.setText(Imc);
                dadocli.setImc(IMC);
                cIMC.obesid(IMC);
                String Obesid = cIMC.obesid(IMC);
                obesid.setText(Obesid);
                dadocli.setObesid(Obesid);

                // Chamada do método para alterar os dados na classe de Data Access Object dadoClinicoDAO.
                cliDAO.changeData(dadocli);
                JOptionPane.showMessageDialog(null, "Anamnese atualizada com sucesso.");
            }
        }
    }//GEN-LAST:event_alterarActionPerformed

    private void excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirActionPerformed
        // Ação do botão EXCLUIR na tela ANAMNESE
        String Id = id.getText();

        // Verifica se o formulário está em branco
        if (Id.equalsIgnoreCase("")) {
            JOptionPane.showMessageDialog(null, "Para excluir os dados é necessário BUSCAR por uma anamnese.");
        } else {

            // Confirma se o funcionário já está cadastrado no sistema.
            int ID = Integer.valueOf(Id);
            if (ID == fDAO.listData(Id).getId()) {
                anam.setId(ID);

                // Chamada do método para apagar os dados na classe de Data Access Object anamneseDAO.
                aDAO.eraseData(anam);
                JOptionPane.showMessageDialog(null, "Anamnese apagada com sucesso.");

                // Mantém os campos de tipo de exame em branco.
                id.setText("");
                admis.setSelected(false);
                demis.setSelected(false);
                perid.setSelected(false);
                apt.setSelected(false);
                inapt.setSelected(false);

                // Mantém os campos de dados de risco (antecedentes familiares) em branco.
                dadoris.setId(ID);
                riscoDAO.eraseData(dadoris);
                fumo.setSelected(false);
                alcool.setSelected(false);
                convul.setSelected(false);
                avc.setSelected(false);
                infar.setSelected(false);
                isquem.setSelected(false);
                arritm.setSelected(false);

                // Mantém os campos de dados clínicos (antecedentes pessoais) em branco.
                dadocli.setId(ID);
                cliDAO.eraseData(dadocli);
                dataaval.setText("");
                alerg.setSelected(false);
                medic.setSelected(false);
                hiper.setSelected(false);
                diab.setSelected(false);
                reumat.setSelected(false);
                epilep.setSelected(false);
                lombal.setSelected(false);
                resp.setSelected(false);
                vasc.setSelected(false);
                colest.setSelected(false);
                peso.setText("");
                altura.setText("");
                imc.setText("");
                obesid.setText("");
            }
        }
    }//GEN-LAST:event_excluirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox admis;
    private javax.swing.JCheckBox alcool;
    private javax.swing.JCheckBox alerg;
    private javax.swing.JButton alterar;
    private javax.swing.JTextField altura;
    private javax.swing.JCheckBox apt;
    private javax.swing.JCheckBox arritm;
    private javax.swing.JCheckBox avc;
    private javax.swing.JTextField busca;
    private javax.swing.JButton buscar;
    private javax.swing.JCheckBox colest;
    private javax.swing.JCheckBox convul;
    private javax.swing.JFormattedTextField dataaval;
    private javax.swing.JCheckBox demis;
    private javax.swing.JCheckBox diab;
    private javax.swing.JCheckBox epilep;
    private javax.swing.JButton excluir;
    private javax.swing.JCheckBox fumo;
    private javax.swing.JCheckBox hiper;
    private javax.swing.JTextField id;
    private javax.swing.JLabel imc;
    private javax.swing.JCheckBox inapt;
    private javax.swing.JCheckBox infar;
    private javax.swing.JCheckBox isquem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton limpar;
    private javax.swing.JCheckBox lombal;
    private javax.swing.JCheckBox medic;
    private javax.swing.JLabel obesid;
    private javax.swing.JCheckBox perid;
    private javax.swing.JTextField peso;
    private javax.swing.JCheckBox resp;
    private javax.swing.JCheckBox reumat;
    private javax.swing.JButton sair;
    private javax.swing.JButton salvar;
    private javax.swing.JCheckBox vasc;
    // End of variables declaration//GEN-END:variables
}
